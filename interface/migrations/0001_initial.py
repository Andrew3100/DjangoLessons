# Generated by Django 4.0 on 2021-12-13 13:40

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Sections',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('param_name', models.TextField(max_length=1000, verbose_name='Имя таблицы')),
                ('interface_name', models.TextField(max_length=1000, verbose_name='Пользовательское имя раздела')),
                ('description', models.TextField(max_length=1000, verbose_name='Описание')),
                ('include', models.IntegerField(max_length=1000, verbose_name='Статус')),
            ],
            options={
                'verbose_name': 'Структура разделов',
                'verbose_name_plural': 'Структура разделов',
            },
        ),
        migrations.CreateModel(
            name='Sub_sections',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section_id', models.TextField(max_length=1000, verbose_name='Номер раздела')),
                ('param_name', models.TextField(max_length=1000, verbose_name='Имя таблицы')),
                ('interface_name', models.TextField(max_length=1000, verbose_name='Пользовательское имя таблицы')),
                ('description', models.TextField(max_length=1000, verbose_name='Описание')),
                ('include', models.IntegerField(max_length=1000, verbose_name='Статус')),
            ],
            options={
                'verbose_name': 'Структура подразделов',
                'verbose_name_plural': 'Структура подразделов',
            },
        ),
        migrations.CreateModel(
            name='Subsections_data',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section_id', models.TextField(max_length=1000, verbose_name='Номер раздела')),
                ('subsection_id', models.TextField(max_length=1000, verbose_name='Номер подраздела')),
                ('html_form_data_type', models.TextField(max_length=1000, verbose_name='Тип данных HTML-формы для ввода записи')),
                ('sql_field_data_type', models.TextField(max_length=1000, verbose_name='Тип данных для поля таблицы БД')),
                ('html_descriptor', models.TextField(max_length=1000, verbose_name='Метка HTML-формы для ввода записи')),
                ('sql_field_name', models.TextField(max_length=1000, verbose_name='Имя поля таблицы БД')),
                ('required', models.TextField(max_length=1000, verbose_name='Обязательность заполнения')),
            ],
            options={
                'verbose_name': 'Структура таблиц',
                'verbose_name_plural': 'Структура таблиц',
            },
        ),
        migrations.CreateModel(
            name='TableAus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('student_count', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('year', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('author', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('is_delete', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
            ],
            options={
                'verbose_name': 'Иностранные слушатели',
                'verbose_name_plural': 'Иностранные слушатели',
                'db_table': 'table_aus',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TableCultDoc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('contr_agent', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('timestamp_agree_start', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('timestamp_agree_stop', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('agree_subject', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('status', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('year', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('author', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('is_delete', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
            ],
            options={
                'verbose_name': 'Культера_договора и соглашения',
                'verbose_name_plural': 'Культера_договора и соглашения',
                'db_table': 'table_cult_doc',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TableCultEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_name', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('event_target', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('timestamp_event_start', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('timestamp_event_stop', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('participant_count', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('event_location', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('results', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('status', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('year', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('author', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('is_delete', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
            ],
            options={
                'verbose_name': 'Культурные мероприятия',
                'verbose_name_plural': 'Культурные мероприятия',
                'db_table': 'table_cult_event',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TableEcDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_name', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('event_target', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('timestamp_event_start', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('timestamp_event_stop', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('participant_count', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('event_location', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('year', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('author', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('is_delete', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
            ],
            options={
                'verbose_name': 'Экономические договора и соглашения',
                'verbose_name_plural': 'Экономические договора и соглашения',
                'db_table': 'table_ec_document',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TableEcEvents',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_name', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('event_target', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('timestamp_event_start', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('timestamp_event_stop', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('participant_count', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('event_location', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('results', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('status', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('year', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('author', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('is_delete', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
            ],
            options={
                'verbose_name': 'Экономические мероприятия',
                'verbose_name_plural': 'Экономические мероприятия',
                'db_table': 'table_ec_events',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TableGrants',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fund_name', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('grant_name', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('country', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('timestamp_grant_start', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('timestamp_grant_stop', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('year', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('author', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('is_delete', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
            ],
            options={
                'verbose_name': 'Гранты_образование',
                'verbose_name_plural': 'Гранты_образование',
                'db_table': 'table_grants',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TableGuberDocLinks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('belgorod_contr_agent', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('inside_contr_agent', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('agree_name', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('timestamp_agree_start', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('timestamp_agree_stop', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('agree_location', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('year', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('author', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('is_delete', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
            ],
            options={
                'verbose_name': 'Договора и соглашения Администрации Губернатора Белгородской области',
                'verbose_name_plural': 'Договора и соглашения Администрации Губернатора Белгородской области',
                'db_table': 'table_guber_doc_links',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TableGuberInternational',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_name', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('siders_guber_agree', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('registr_minust', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('year', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('author', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('is_delete', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
            ],
            options={
                'verbose_name': 'Международные договора Администрации Губернатора Белгородской области',
                'verbose_name_plural': 'Международные договора Администрации Губернатора Белгородской области',
                'db_table': 'table_guber_international',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TableInternational',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_name', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('timestamp_event_start', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('timestamp_event_stop', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('participant_count', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('results', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('year', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('author', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('is_delete', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
            ],
            options={
                'verbose_name': 'Международные мероприятия',
                'verbose_name_plural': 'Международные мероприятия',
                'db_table': 'table_international',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TableInternationalDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('contr_agent', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('timestamp_agree_start', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('timestamp_agree_stop', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('agree_subject', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('year', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('author', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('is_delete', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
            ],
            options={
                'verbose_name': 'Международные договора и соглашения',
                'verbose_name_plural': 'Международные договора и соглашения',
                'db_table': 'table_international_document',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TableMobile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('mobile_name', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('year', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('author', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('is_delete', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
            ],
            options={
                'verbose_name': 'Программы мобильности',
                'verbose_name_plural': 'Программы мобильности',
                'db_table': 'table_mobile',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TableOch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('higher_education', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('mean_education', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('graduate_students', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('first_course', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('except_field', models.TextField(blank=True, db_collation='utf8_general_ci', db_column='except', null=True)),
                ('year', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('author', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('is_delete', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
            ],
            options={
                'verbose_name': 'Очная форма обучения',
                'verbose_name_plural': 'Очная форма обучения',
                'db_table': 'table_och',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TableSportDoc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('contr_agent', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('timestamp_agree_start', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('timestamp_agree_stop', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('agree_subject', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('status', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('year', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('author', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('is_delete', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
            ],
            options={
                'verbose_name': 'Документы спорт',
                'verbose_name_plural': 'Документы спорт',
                'db_table': 'table_sport_doc',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TableSportInter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_name', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('event_target', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('timestamp_event_start', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('timestamp_event_stop', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('participant_count', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('event_location', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('results', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('status', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('year', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('author', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('is_delete', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
            ],
            options={
                'verbose_name': 'Мероприятия спорт',
                'verbose_name_plural': 'Мероприятия спорт',
                'db_table': 'table_sport_inter',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TableStudentChange',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('partner', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('timestamp_practice_start', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('timestamp_practice_stop', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('year', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('author', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('is_delete', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
            ],
            options={
                'verbose_name': 'Обмен студентами',
                'verbose_name_plural': 'Обмен студентами',
                'db_table': 'table_student_change',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TableWork',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('municipal_district', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('citizenship', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('field_of_activity', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('employee_count', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('year', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('author', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('is_delete', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
            ],
            options={
                'verbose_name': 'Информация о труде и занятости',
                'verbose_name_plural': 'Информация о труде и занятости',
                'db_table': 'table_work',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TableYoung',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_name', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('event_target', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('timestamp_event_start', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('timestamp_event_stop', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('participant_count', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('event_location', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('results', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('status', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('year', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('author', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('is_delete', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
            ],
            options={
                'verbose_name': 'Мероприятия молодёжной политики',
                'verbose_name_plural': 'Мероприятия молодёжной политики',
                'db_table': 'table_young',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TableZaoch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('higher_education', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('mean_education', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('graduate_students', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('first_course', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('except_field', models.TextField(blank=True, db_collation='utf8_general_ci', db_column='except', null=True)),
                ('year', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('author', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('is_delete', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
            ],
            options={
                'verbose_name': 'Заочная форма обучения',
                'verbose_name_plural': 'Заочная форма обучения',
                'db_table': 'table_zaoch',
                'managed': True,
            },
        ),
    ]
